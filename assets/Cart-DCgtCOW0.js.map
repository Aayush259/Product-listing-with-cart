{"version":3,"file":"Cart-DCgtCOW0.js","sources":["../../src/images/illustration-empty-cart.svg","../../src/images/icon-remove-item.svg","../../src/components/CartItem.jsx","../../src/images/icon-carbon-neutral.svg","../../src/components/ConfirmOrderButton.jsx","../../src/components/Cart.jsx"],"sourcesContent":["export default \"__VITE_ASSET__OqDrhZkN__\"","export default \"__VITE_ASSET__CqvlMyhu__\"","import React from 'react';\nimport removeIcon from '../images/icon-remove-item.svg';\n\nexport default function CartItem({ item, removeItemFromCartCompletely }) {\n\n    // Item details to display in cart.\n    const itemName = item['name'];\n    const itemCount = item['count'];\n    const itemPrice = item['price'];\n    const totalPrice = (itemCount * itemPrice).toFixed(2);\n\n    return (\n        <div className=\"flex flex-row items-center justify-between mt-5 border-b-2 border-rose100 pb-3\">\n            <div>\n                <p className=\"font-semibold\">{itemName}</p>\n                <p className=\"mt-1\">\n                    <span className=\"text-redGiven font-semibold\">{itemCount}x</span>\n                    <span className=\"font-thin text-rose900 ml-5 text-sm\">@ ${itemPrice}</span>\n                    <span className=\"font-extralight text-rose900 ml-3 text-sm\">${totalPrice}</span>\n                </p>\n            </div>\n            <button className=\"rounded-full\" onClick={() => {removeItemFromCartCompletely(itemName)}}>\n                <img src={removeIcon} alt=\"Remove item\" className=\"border border-rose300 rounded-full h-4 p-[2px] hover:border-rose900 \" />\n            </button>\n        </div>\n    );\n};\n","export default \"__VITE_ASSET__BDYgVR5M__\"","import React from 'react';\nimport carbonNeutralIcon from '../images/icon-carbon-neutral.svg';\n\nexport default function ConfirmOrderButton({ totalOrderPrice, setOrderConfirmed }) {\n\n    return (\n        <div className=\"my-6\">\n            <p className=\"text-sm flex items-center justify-between\">\n                <span>Order Total</span>\n                <span className=\"font-extrabold text-xl\">${totalOrderPrice.toFixed(2)}</span>\n            </p>\n\n            <div className=\"text-center my-6 p-3 rounded-lg flex items-center justify-center gap-2 bg-rose100\">\n                <img src={carbonNeutralIcon} alt=\"Carbon neutral delivery\" className=\"h-6\" />\n                <p className=\"text-rose500 font-medium\">\n                    This is a <span className=\"font-semibold text-sm text-rose900\">carbon-neutral</span> delivery\n                </p>\n            </div>\n\n            <button\n                className=\"bg-redGiven w-full py-3 px-2 rounded-3xl text-rose50 font-semibold hover:opacity-80\"\n                onClick={() => {setOrderConfirmed(true)}}\n            >\n                Confirm Order\n            </button>\n\n        </div>\n    );\n};\n","import React, { useEffect, useState } from 'react';\nimport emptyCartIcon from '../images/illustration-empty-cart.svg';\nimport { useCartData } from '../context/CartDataContext.jsx';\nimport CartItem from './CartItem.jsx';\nimport ConfirmOrderButton from './ConfirmOrderButton.jsx';\n\nexport default function Cart() {\n\n    // Getting cartItems from cart data context.\n    const { cartItems, setCartItems, setOrderConfirmed, totalOrderPrice, setTotalOrderPrice } = useCartData();\n\n    // State for total number of items present in cart.\n    const [totalItemsInCart, setTotalItemsInCart] = useState(0);\n\n    // Update total number of items and total price of all items in cart when cartItems from context changes.\n    useEffect(() => {\n        let totalItemsCount = 0;\n        let totalPrice = 0;\n\n        cartItems.forEach(item => {\n            totalItemsCount += item['count'];\n            totalPrice += item['price'] * item['count'];\n        });\n\n        setTotalItemsInCart(totalItemsCount);\n        setTotalOrderPrice(totalPrice);\n    }, [cartItems]);\n\n    // This function removes the item from cart completely, means all the counts are removed.\n    const removeItemFromCartCompletely = (itemName) => {\n        setCartItems(prevCartItems => prevCartItems.filter(items => items['name'] !== itemName));\n    };\n\n    return (\n        <div className=\"relative flex-grow max-w-[90vw] sm:max-w-96 min-w-fit sm:mr-2\">\n            <div className=\"bg-rose50 sticky top-0 left-0 w-full min-h-56 mt-4 sm:m-4 p-4 pb-1 rounded-lg\">\n                <p className=\"text-redGiven font-bold text-2xl mb-4\">Your Cart ({totalItemsInCart})</p>\n                {\n                    totalItemsInCart <= 0 ? <>\n                        <img src={emptyCartIcon} alt=\"Empty Cart\" className=\"mx-auto mt-6\" />\n                        <p className=\"mt-4 mb-6 text-center text-rose500 font-semibold\">Your added items will appear here</p>\n                    </> : <>\n                    {\n                        cartItems.map(item => item['count'] > 0 ?\n                            <CartItem key={item['name']} item={item} removeItemFromCartCompletely={removeItemFromCartCompletely} /> : null\n                        )\n                    }\n                    <ConfirmOrderButton totalOrderPrice={totalOrderPrice} setOrderConfirmed={setOrderConfirmed} />\n                    </>\n                }\n            </div>\n        </div>\n    );\n};\n"],"names":["emptyCartIcon","removeIcon","CartItem","item","removeItemFromCartCompletely","itemName","itemCount","itemPrice","totalPrice","jsxs","jsx","carbonNeutralIcon","ConfirmOrderButton","totalOrderPrice","setOrderConfirmed","Cart","cartItems","setCartItems","setTotalOrderPrice","useCartData","totalItemsInCart","setTotalItemsInCart","useState","useEffect","totalItemsCount","prevCartItems","items","Fragment"],"mappings":"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"}